# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request events
on:
  push:
    branches: [ master, feature/* ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.102'

    # Install Nerdbank.GitVersioning
    - name: install nbgv
      run: dotnet tool install --tool-path . nbgv

    # Set version
    - name: set version
      run: ./nbgv cloud

    # Build command line tool
    - name: dotnet build
      run: dotnet build -c Release
      working-directory: src/BuildDacpac/

    # Run tests for command line tool
    - name: dotnet test
      run: dotnet test -c Release
      working-directory: test/BuildDacpac.Tests/

    # Run build for SDK package
    - name: dotnet build
      run: dotnet build -c Release
      working-directory: src/MSBuild.Sdk.SqlProj

    # Ensure that test project builds
    - name: dotnet build TestProject
      run: dotnet build -c Release
      working-directory: test/TestProject
    
    # Package
    - name: dotnet pack
      run: dotnet pack -c Release src/MSBuild.Sdk.SqlProj/MSBuild.Sdk.SqlProj.csproj

    # Push
    - name: dotnet push
      run: |
           for f in ./src/MSBuild.Sdk.SqlProj/bin/Release/*.nupkg
           do
             curl -X PUT -u "jmezach:${{ secrets.GITHUB_TOKEN }}" -F package=@$f https://nuget.pkg.github.com/jmezach/
           done
      shell: bash
